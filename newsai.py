# -*- coding: utf-8 -*-
"""NEWSAI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tTZUMVE0uhN7y2tY2SFHJm3bJ2mYRQRP
"""

!pip install transformers datasets scikit-learn torch

import pandas as pd
df = pd.read_csv('/content/geopolitical_sample.csv')

# prompt: keep last 1000 entries onlly rest delete

df = df.tail(1000)

df





from sentence_transformers import SentenceTransformer, util

model = SentenceTransformer('all-MiniLM-L6-v2')

# High-risk geopolitical scenarios
at_risk_examples  = [
    "gunmen attack protest", "die", "border conflict escalates", "bomb blast in city center",
    "massive riots erupt", "political unrest turns violent", "missile strike reported",
    "ethnic tensions flare up", "terrorist group claims responsibility", "airstrikes reported", "civil war declared",
    "military coup underway", "clashes between protesters and police", "government forces engage rebels",
    "explosions rock downtown area", "famine declared in the region", "border wall constructed",
    "peace talks break down", "unrest spreads across the nation", "foreign troops invade",
    "sanctions imposed on the country", "nationalist riots break out", "rebels seize key city",
    "bombing targets government officials", "rebels control major roads", "armed groups clash over territory",
    "international intervention in conflict", "security forces block protestors", "peacekeepers deployed",
    "insurgents attack military base", "terrorist attack targets civilians", "refugee crisis escalates",
    "militant forces target oil fields", "violence erupts at border checkpoint", "rebels take over government buildings",
    "mass executions reported", "military base falls into enemy hands", "curfew imposed nationwide",
    "united nations calls for ceasefire", "civil unrest disrupts transportation", "leaders flee amid violent protests",
    "mass protests turn into a riot", "airports shut down due to violence", "refugees flood across borders",
    "attacks on foreign embassies", "president issues emergency decree", "foreign relations deteriorate sharply",
    "war crimes suspected in conflict zones", "skirmishes along the border intensify", "city under siege",
    "military crackdown on opposition", "weapons cache discovered", "UN peace talks fail to prevent escalation",
    "rebels launch major offensive", "massive military buildup near border", "repression of minority group reported",
    "diplomatic ties severed between nations", "international aid blocked by government forces", "targeted assassinations reported",
    "economic sanctions lead to protests", "militants attack police convoy", "drug cartel violence spikes",
    "major city loses power in attack", "regional government declares independence", "nuclear facility targeted by militants",
    "economic collapse sparks violent protests", "riot police deploy tear gas on protestors", "country declares martial law",
    "state of emergency declared after unrest", "ethnic cleansing reports surface", "refugee camps targeted by military",
    "military weapons discovered in civilian areas", "critical infrastructure destroyed in bombings", "peace talks interrupted by violence",
    "mass grave discovered in conflict zone", "hostile forces take control of major city", "new military alliance formed",
    "war crimes committed against civilians", "conflict over natural resources worsens", "chemical weapons used in attack",
    "foreign diplomats evacuated from capital", "land mines discovered along border", "peacekeepers attacked while patrolling",
    "foreign nation intervenes in conflict", "military operation escalates into full-scale war", "massive demonstrations against government",
    "violent crackdown on peaceful protesters", "militant factions vow to overthrow government", "border fortifications destroyed in air raid",
    "insurgent group claims responsibility for bombing", "pro-government forces accused of human rights abuses", "fighting intensifies around oil fields",
    "violence erupts in refugee camps", "urban warfare breaks out in capital", "military build-up along disputed border",
    "foreign nationals detained during conflict", "underground rebel movements grow in strength", "diplomatic mission targets by bombers",
    "militants threaten key government officials", "unilateral military action taken by neighboring country", "deadly confrontation at border crossing",
    "mass protests in response to military coup", "oil refinery targeted in attack", "militant group launches rocket attack",
    "nation prepares for all-out war", "foreign media banned during protests", "gunfire reported near government headquarters",
    "nation's sovereignty challenged by neighboring state", "major highway shut down due to military activity", "humanitarian aid blocked by armed forces",
    "journalists detained during civil unrest", "critical military hardware intercepted by opposing forces", "severe food shortage leads to riots",
    "destruction of cultural heritage sites in conflict", "government cracks down on dissidents", "water supply contaminated in conflict zone",
    "illegal arms trade uncovered", "freedom of speech suppressed in authoritarian regime", "rebels destroy communication infrastructure",
    "rescue teams unable to enter warzone", "intense aerial bombardment reported", "local militias launch attacks on government installations",
    "foreign nationals involved in diplomatic standoff", "civilians flee urban areas amid clashes", "political prisoner hunger strike gains attention",
    "criminal gangs profit from war economy", "nuclear weapons in jeopardy amid conflict", "lives lost in crossfire between rival groups",
    "ethnic group driven from ancestral lands", "insurgent leaders captured or killed", "violence spreads to neighboring country",
    "car bomb explodes in government square", "water wars erupt over dwindling resources", "ethnic violence leads to mass displacement",
    "surveillance state implements new control measures", "protestors demand end to military rule", "pro-government paramilitary forces accused of atrocities",
    "global organizations call for sanctions", "border forces clash over disputed territory", "foreign military base under threat of attack",
    "violence at religious site leads to deaths", "high-profile politician assassinated", "supply lines to rebel forces cut off",
    "peacekeeping forces ambushed in conflict zone", "fighting intensifies as peace talks stall", "counterterrorism operation goes awry",
    "international community condemns government violence", "nuclear disaster feared in war-torn region", "looting and violence plague major cities",
    "nation's defense minister killed in ambush", "foreign aid workers taken hostage", "rebels target key infrastructure",
    "heavily armed militants attack town center", "armed groups clash over control of resources", "refugees face violence and persecution",
    "arms embargo imposed on the nation", "protests erupt over government crackdown on opposition", "targeted killings of civilians by militias",
    "peace talks interrupted by outbreak of violence", "resistance fighters pledge to continue struggle", "pro-government militias target opposition strongholds",
    "electric grid attacked by rebels", "hostages taken in political protest", "foreign arms shipments intercepted", "rival factions agree to temporary ceasefire"
]


# Safe/neutral headlines
safe_examples  = [
    "government announces development plan", "students win robotics competition", "weather report for the week",
    "city hosts cultural festival", "health ministry launches awareness drive", "library gets renovation grant",
    "farmers benefit from subsidies", "citizens celebrate independence day", "city council meeting concludes peacefully", "education reform passed",
    "local school celebrates graduation ceremony", "community gardening initiative kicks off", "new infrastructure project unveiled",
    "students participate in tree planting event", "public health campaign promotes exercise", "city parks receive funding for upgrades",
    "local museum hosts new art exhibit", "national sports team wins international tournament", "new business incubator opens in downtown",
    "local library partners with schools to promote reading", "charity event raises funds for cancer research", "community center celebrates anniversary",
    "youth program empowers young entrepreneurs", "city announces public transport expansion", "charity run raises funds for homeless",
    "community leaders attend climate change conference", "university announces scholarships for underprivileged students", "green energy initiative launched",
    "local farmers market opens for season", "city sets goals for carbon-neutral future", "non-profit opens new shelter for women",
    "school board adopts new curriculum", "city council works to improve housing affordability", "health clinic offers free vaccinations",
    "volunteers clean up beach for environmental awareness", "new art center opens downtown", "local theater group performs popular play",
    "students engage in global peace conference", "police department announces new community outreach program", "youth group organizes charity event",
    "international company opens new branch", "city sets record for recycling efforts", "students and teachers collaborate on sustainability project",
    "local startup creates new job opportunities", "businesses contribute to local food bank", "school celebrates cultural diversity week",
    "public library hosts writing workshop", "new technology startup showcases innovative products", "city to host international business summit",
    "community partners with local artists for public murals", "new software app launched to assist seniors", "new children's hospital wing opens",
    "college offers new entrepreneurship program", "regional economy shows strong growth", "farmers receive technology to improve crops",
    "local school launches digital literacy program", "citizens attend local government forum", "youth robotics team advances to nationals",
    "city implements new waste reduction policies", "council discusses plans for affordable housing", "new fitness center opens in the community",
    "citizens take part in neighborhood clean-up event", "regional transit system gets major upgrade", "new public safety initiative announced",
    "city residents invited to community health fair", "local business expands into new markets", "city improves emergency preparedness programs",
    "community creates new dog park", "neighborhood association plans summer block party", "college hosts career fair for students",
    "city encourages pedestrian-friendly zones", "food pantry expands services to help more families", "city offers tax incentives for green businesses",
    "annual arts and crafts fair attracts thousands", "local school named one of the best in the state", "health campaign raises awareness for mental health",
    "youth leadership program graduates first class", "new urban farm initiative launched", "local restaurant donates meals to homeless",
    "new solar energy project breaks ground", "university adds new science and tech degrees", "non-profit partners with schools to offer mentorship",
    "library introduces new STEM workshops for kids", "neighborhood turns out for tree-planting event", "city invests in high-speed internet infrastructure",
    "annual health walk raises funds for cancer research", "small business conference supports entrepreneurs", "community hosts cultural exchange event",
    "technology company donates computers to local schools", "city implements water conservation plan", "local chef wins national culinary competition",
    "youth group volunteers at animal shelter", "new sports league forms for youth athletes", "local choir performs at community center",
    "international conference discusses global education", "new neighborhood center supports senior citizens", "food truck festival attracts crowds",
    "public transportation ridership hits record numbers", "business expo showcases local innovations", "new park created in downtown area",
    "college opens new research facility", "government invests in affordable housing development", "local artists participate in public art project",
    "city announces free public Wi-Fi in parks", "students participate in national science fair", "volunteers provide free tutoring to local students",
    "new charity organization launched to support mental health", "state government announces new educational funding", "annual fundraising gala supports scholarships",
    "residents vote to fund new community center", "city unveils new bike-sharing program", "local high school wins state championship",
    "public health initiative focuses on smoking cessation", "regional hospital opens new trauma unit", "youth theater group stages new production",
    "city partners with local farmers to promote sustainable agriculture", "municipal government launches new digital services", "new tech hub opens to support innovation",
    "international volunteer program brings aid to developing countries", "college hosts symposium on climate change", "local sports team wins regional league",
    "new community swimming pool opens for the summer", "city holds job fair for displaced workers", "non-profit delivers supplies to disaster survivors"
]


# Convert to embeddings
at_risk_embeddings = model.encode(at_risk_examples, convert_to_tensor=True)
safe_embeddings = model.encode(safe_examples, convert_to_tensor=True)

headline_embeddings = model.encode(df['headline_text'].tolist(), convert_to_tensor=True)

at_risk_sim = util.cos_sim(headline_embeddings, at_risk_embeddings).max(dim=1).values
safe_sim = util.cos_sim(headline_embeddings, safe_embeddings).max(dim=1).values

df['stability_status'] = ['at_risk' if ar > sf else 'safe' for ar, sf in zip(at_risk_sim, safe_sim)]

df

import pandas as pd

df = pd.read_csv('/content/perfectly_labeled_geopolitical_news.csv')

df







df = df[['headline_text', 'stability_status']]  # Make sure columns are named right
df = df.dropna()

# Map labels to numbers
df['label'] = df['stability_status'].map({'safe': 0, 'at_risk': 1})

from sklearn.model_selection import train_test_split

train_texts, val_texts, train_labels, val_labels = train_test_split(
    df['headline_text'].tolist(), df['label'].tolist(), test_size=0.2, random_state=42
)

from transformers import BertTokenizer

tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')

train_encodings = tokenizer(train_texts, truncation=True, padding=True, max_length=64)
val_encodings = tokenizer(val_texts, truncation=True, padding=True, max_length=64)

import torch

class NewsDataset(torch.utils.data.Dataset):
    def __init__(self, encodings, labels):
        self.encodings = encodings
        self.labels = labels

    def __getitem__(self, idx):
        return {key: torch.tensor(val[idx]) for key, val in self.encodings.items()} | {'labels': torch.tensor(self.labels[idx])}

    def __len__(self):
        return len(self.labels)

train_dataset = NewsDataset(train_encodings, train_labels)
val_dataset = NewsDataset(val_encodings, val_labels)

import os
os.environ["WANDB_DISABLED"] = "true"


from transformers import BertForSequenceClassification, Trainer, TrainingArguments

model = BertForSequenceClassification.from_pretrained("bert-base-uncased", num_labels=2)

training_args = TrainingArguments(
    output_dir="./results",
    num_train_epochs=3,
    per_device_train_batch_size=16,
    per_device_eval_batch_size=64,
    # The 'evaluation_strategy' argument was renamed to 'eval_strategy' in newer versions.
    eval_strategy="epoch",
    save_strategy="epoch",
    logging_dir="./logs",
    logging_steps=10,
)

trainer = Trainer(
    model=model,
    args=training_args,
    train_dataset=train_dataset,
    eval_dataset=val_dataset
)

trainer.train()

model.save_pretrained("geopolitical_bert")
tokenizer.save_pretrained("geopolitical_bert")

# Re-save model and tokenizer to folder
model.save_pretrained("geopolitical_bert")
tokenizer.save_pretrained("geopolitical_bert")

# Download the full model folder as zip (in Colab)
!zip -r geopolitical_bert.zip geopolitical_bert
from google.colab import files
files.download("geopolitical_bert.zip")

# prompt: check whatever model get save is correct or not

from transformers import BertForSequenceClassification, BertTokenizer
import torch

# Load the saved model and tokenizer
loaded_model = BertForSequenceClassification.from_pretrained("geopolitical_bert")
loaded_tokenizer = BertTokenizer.from_pretrained("geopolitical_bert")

# Example text for testing
example_text = "disaster in countary many family get killed"

# Tokenize the example text
inputs = loaded_tokenizer(example_text, return_tensors="pt", truncation=True, padding=True, max_length=64)

# Make a prediction using the loaded model
with torch.no_grad():
  outputs = loaded_model(**inputs)

# Get the predicted class (0 or 1)
predicted_class = torch.argmax(outputs.logits, dim=1).item()

# Print the prediction (replace with your desired verification logic)
print(f"Predicted class for '{example_text}': {predicted_class}")

#Further verification can be done by comparing outputs with a set of inputs and known outputs
#You can save a few input/output pairs from the training data, then check if the model returns the same output

